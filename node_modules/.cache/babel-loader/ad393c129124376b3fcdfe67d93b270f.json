{"ast":null,"code":"function defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidEra: null,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    era: null,\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n\nexport default function getParsingFlags(m) {\n  if (m._pf == null) {\n    m._pf = defaultParsingFlags();\n  }\n\n  return m._pf;\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/create/parsing-flags.js"],"names":["defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf"],"mappings":"AAAA,SAASA,mBAAT,GAA+B;AAC3B;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,YAAY,EAAE,EAFX;AAGHC,IAAAA,WAAW,EAAE,EAHV;AAIHC,IAAAA,QAAQ,EAAE,CAAC,CAJR;AAKHC,IAAAA,aAAa,EAAE,CALZ;AAMHC,IAAAA,SAAS,EAAE,KANR;AAOHC,IAAAA,UAAU,EAAE,IAPT;AAQHC,IAAAA,YAAY,EAAE,IARX;AASHC,IAAAA,aAAa,EAAE,KATZ;AAUHC,IAAAA,eAAe,EAAE,KAVd;AAWHC,IAAAA,GAAG,EAAE,KAXF;AAYHC,IAAAA,eAAe,EAAE,EAZd;AAaHC,IAAAA,GAAG,EAAE,IAbF;AAcHC,IAAAA,QAAQ,EAAE,IAdP;AAeHC,IAAAA,OAAO,EAAE,KAfN;AAgBHC,IAAAA,eAAe,EAAE;AAhBd,GAAP;AAkBH;;AAED,eAAe,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;AACvC,MAAIA,CAAC,CAACC,GAAF,IAAS,IAAb,EAAmB;AACfD,IAAAA,CAAC,CAACC,GAAF,GAAQnB,mBAAmB,EAA3B;AACH;;AACD,SAAOkB,CAAC,CAACC,GAAT;AACH","sourcesContent":["function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty: false,\n        unusedTokens: [],\n        unusedInput: [],\n        overflow: -2,\n        charsLeftOver: 0,\n        nullInput: false,\n        invalidEra: null,\n        invalidMonth: null,\n        invalidFormat: false,\n        userInvalidated: false,\n        iso: false,\n        parsedDateParts: [],\n        era: null,\n        meridiem: null,\n        rfc2822: false,\n        weekdayMismatch: false,\n    };\n}\n\nexport default function getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n"]},"metadata":{},"sourceType":"module"}