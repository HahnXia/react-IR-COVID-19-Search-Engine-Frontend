{"ast":null,"code":"import { formattingTokens } from '../format/format';\nexport var defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\nexport function longDateFormat(key) {\n  var format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()];\n\n  if (format || !formatUpper) {\n    return format;\n  }\n\n  this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {\n    if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {\n      return tok.slice(1);\n    }\n\n    return tok;\n  }).join('');\n  return this._longDateFormat[key];\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/locale/formats.js"],"names":["formattingTokens","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","longDateFormat","key","format","_longDateFormat","formatUpper","toUpperCase","match","map","tok","slice","join"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,IAAIC,qBAAqB,GAAG;AAC/BC,EAAAA,GAAG,EAAE,WAD0B;AAE/BC,EAAAA,EAAE,EAAE,QAF2B;AAG/BC,EAAAA,CAAC,EAAE,YAH4B;AAI/BC,EAAAA,EAAE,EAAE,cAJ2B;AAK/BC,EAAAA,GAAG,EAAE,qBAL0B;AAM/BC,EAAAA,IAAI,EAAE;AANyB,CAA5B;AASP,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAChC,MAAIC,MAAM,GAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAb;AAAA,MACIG,WAAW,GAAG,KAAKD,eAAL,CAAqBF,GAAG,CAACI,WAAJ,EAArB,CADlB;;AAGA,MAAIH,MAAM,IAAI,CAACE,WAAf,EAA4B;AACxB,WAAOF,MAAP;AACH;;AAED,OAAKC,eAAL,CAAqBF,GAArB,IAA4BG,WAAW,CAClCE,KADuB,CACjBd,gBADiB,EAEvBe,GAFuB,CAEnB,UAAUC,GAAV,EAAe;AAChB,QACIA,GAAG,KAAK,MAAR,IACAA,GAAG,KAAK,IADR,IAEAA,GAAG,KAAK,IAFR,IAGAA,GAAG,KAAK,MAJZ,EAKE;AACE,aAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAP;AACH;;AACD,WAAOD,GAAP;AACH,GAZuB,EAavBE,IAbuB,CAalB,EAbkB,CAA5B;AAeA,SAAO,KAAKP,eAAL,CAAqBF,GAArB,CAAP;AACH","sourcesContent":["import { formattingTokens } from '../format/format';\n\nexport var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A',\n};\n\nexport function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper\n        .match(formattingTokens)\n        .map(function (tok) {\n            if (\n                tok === 'MMMM' ||\n                tok === 'MM' ||\n                tok === 'DD' ||\n                tok === 'dddd'\n            ) {\n                return tok.slice(1);\n            }\n            return tok;\n        })\n        .join('');\n\n    return this._longDateFormat[key];\n}\n"]},"metadata":{},"sourceType":"module"}