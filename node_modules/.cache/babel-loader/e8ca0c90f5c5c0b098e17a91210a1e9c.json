{"ast":null,"code":"import { get } from '../moment/get-set';\nimport hasOwnProp from '../utils/has-own-prop';\nimport { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match2, matchWord, regexEscape } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { hooks } from '../utils/hooks';\nimport { MONTH } from './constants';\nimport toInt from '../utils/to-int';\nimport isArray from '../utils/is-array';\nimport isNumber from '../utils/is-number';\nimport mod from '../utils/mod';\nimport indexOf from '../utils/index-of';\nimport { createUTC } from '../create/utc';\nimport getParsingFlags from '../create/parsing-flags';\nimport { isLeapYear } from '../utils/is-leap-year';\nexport function daysInMonth(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n\n  var modMonth = mod(month, 12);\n  year += (month - modMonth) / 12;\n  return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n} // FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n  return this.month() + 1;\n});\naddFormatToken('MMM', 0, 0, function (format) {\n  return this.localeData().monthsShort(this, format);\n});\naddFormatToken('MMMM', 0, 0, function (format) {\n  return this.localeData().months(this, format);\n}); // ALIASES\n\naddUnitAlias('month', 'M'); // PRIORITY\n\naddUnitPriority('month', 8); // PARSING\n\naddRegexToken('M', match1to2);\naddRegexToken('MM', match1to2, match2);\naddRegexToken('MMM', function (isStrict, locale) {\n  return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n  return locale.monthsRegex(isStrict);\n});\naddParseToken(['M', 'MM'], function (input, array) {\n  array[MONTH] = toInt(input) - 1;\n});\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n  var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n  if (month != null) {\n    array[MONTH] = month;\n  } else {\n    getParsingFlags(config).invalidMonth = input;\n  }\n}); // LOCALES\n\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n    defaultMonthsShortRegex = matchWord,\n    defaultMonthsRegex = matchWord;\nexport { defaultLocaleMonths, defaultLocaleMonthsShort };\nexport function localeMonths(m, format) {\n  if (!m) {\n    return isArray(this._months) ? this._months : this._months['standalone'];\n  }\n\n  return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\nexport function localeMonthsShort(m, format) {\n  if (!m) {\n    return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n  }\n\n  return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n  var i,\n      ii,\n      mom,\n      llc = monthName.toLocaleLowerCase();\n\n  if (!this._monthsParse) {\n    // this is not used\n    this._monthsParse = [];\n    this._longMonthsParse = [];\n    this._shortMonthsParse = [];\n\n    for (i = 0; i < 12; ++i) {\n      mom = createUTC([2000, i]);\n      this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n      this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n    }\n  }\n\n  if (strict) {\n    if (format === 'MMM') {\n      ii = indexOf.call(this._shortMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    } else {\n      ii = indexOf.call(this._longMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n  } else {\n    if (format === 'MMM') {\n      ii = indexOf.call(this._shortMonthsParse, llc);\n\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = indexOf.call(this._longMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    } else {\n      ii = indexOf.call(this._longMonthsParse, llc);\n\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = indexOf.call(this._shortMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n  }\n}\n\nexport function localeMonthsParse(monthName, format, strict) {\n  var i, mom, regex;\n\n  if (this._monthsParseExact) {\n    return handleStrictParse.call(this, monthName, format, strict);\n  }\n\n  if (!this._monthsParse) {\n    this._monthsParse = [];\n    this._longMonthsParse = [];\n    this._shortMonthsParse = [];\n  } // TODO: add sorting\n  // Sorting makes sure if one month (or abbr) is a prefix of another\n  // see sorting in computeMonthsParse\n\n\n  for (i = 0; i < 12; i++) {\n    // make the regex if we don't have it already\n    mom = createUTC([2000, i]);\n\n    if (strict && !this._longMonthsParse[i]) {\n      this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n      this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n    }\n\n    if (!strict && !this._monthsParse[i]) {\n      regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n      this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n    } // test the regex\n\n\n    if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n      return i;\n    } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n      return i;\n    } else if (!strict && this._monthsParse[i].test(monthName)) {\n      return i;\n    }\n  }\n} // MOMENTS\n\nexport function setMonth(mom, value) {\n  var dayOfMonth;\n\n  if (!mom.isValid()) {\n    // No op\n    return mom;\n  }\n\n  if (typeof value === 'string') {\n    if (/^\\d+$/.test(value)) {\n      value = toInt(value);\n    } else {\n      value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n      if (!isNumber(value)) {\n        return mom;\n      }\n    }\n  }\n\n  dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n  mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n  return mom;\n}\nexport function getSetMonth(value) {\n  if (value != null) {\n    setMonth(this, value);\n    hooks.updateOffset(this, true);\n    return this;\n  } else {\n    return get(this, 'Month');\n  }\n}\nexport function getDaysInMonth() {\n  return daysInMonth(this.year(), this.month());\n}\nexport function monthsShortRegex(isStrict) {\n  if (this._monthsParseExact) {\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      computeMonthsParse.call(this);\n    }\n\n    if (isStrict) {\n      return this._monthsShortStrictRegex;\n    } else {\n      return this._monthsShortRegex;\n    }\n  } else {\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n}\nexport function monthsRegex(isStrict) {\n  if (this._monthsParseExact) {\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      computeMonthsParse.call(this);\n    }\n\n    if (isStrict) {\n      return this._monthsStrictRegex;\n    } else {\n      return this._monthsRegex;\n    }\n  } else {\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n  }\n}\n\nfunction computeMonthsParse() {\n  function cmpLenRev(a, b) {\n    return b.length - a.length;\n  }\n\n  var shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom;\n\n  for (i = 0; i < 12; i++) {\n    // make the regex if we don't have it already\n    mom = createUTC([2000, i]);\n    shortPieces.push(this.monthsShort(mom, ''));\n    longPieces.push(this.months(mom, ''));\n    mixedPieces.push(this.months(mom, ''));\n    mixedPieces.push(this.monthsShort(mom, ''));\n  } // Sorting makes sure if one month (or abbr) is a prefix of another it\n  // will match the longer piece.\n\n\n  shortPieces.sort(cmpLenRev);\n  longPieces.sort(cmpLenRev);\n  mixedPieces.sort(cmpLenRev);\n\n  for (i = 0; i < 12; i++) {\n    shortPieces[i] = regexEscape(shortPieces[i]);\n    longPieces[i] = regexEscape(longPieces[i]);\n  }\n\n  for (i = 0; i < 24; i++) {\n    mixedPieces[i] = regexEscape(mixedPieces[i]);\n  }\n\n  this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n  this._monthsShortRegex = this._monthsRegex;\n  this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n  this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/units/month.js"],"names":["get","hasOwnProp","addFormatToken","addUnitAlias","addUnitPriority","addRegexToken","match1to2","match2","matchWord","regexEscape","addParseToken","hooks","MONTH","toInt","isArray","isNumber","mod","indexOf","createUTC","getParsingFlags","isLeapYear","daysInMonth","year","month","isNaN","NaN","modMonth","format","localeData","monthsShort","months","isStrict","locale","monthsShortRegex","monthsRegex","input","array","config","token","_locale","monthsParse","_strict","invalidMonth","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","m","_months","isFormat","test","localeMonthsShort","_monthsShort","handleStrictParse","monthName","strict","i","ii","mom","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","call","localeMonthsParse","regex","_monthsParseExact","RegExp","replace","setMonth","value","dayOfMonth","isValid","Math","min","date","_d","_isUTC","getSetMonth","updateOffset","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","a","b","length","shortPieces","longPieces","mixedPieces","push","sort","join"],"mappings":"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","sourcesContent":["import { get } from '../moment/get-set';\nimport hasOwnProp from '../utils/has-own-prop';\nimport { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport {\n    addRegexToken,\n    match1to2,\n    match2,\n    matchWord,\n    regexEscape,\n} from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { hooks } from '../utils/hooks';\nimport { MONTH } from './constants';\nimport toInt from '../utils/to-int';\nimport isArray from '../utils/is-array';\nimport isNumber from '../utils/is-number';\nimport mod from '../utils/mod';\nimport indexOf from '../utils/index-of';\nimport { createUTC } from '../create/utc';\nimport getParsingFlags from '../create/parsing-flags';\nimport { isLeapYear } from '../utils/is-leap-year';\n\nexport function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1\n        ? isLeapYear(year)\n            ? 29\n            : 28\n        : 31 - ((modMonth % 7) % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M', match1to2);\naddRegexToken('MM', match1to2, match2);\naddRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n        '_'\n    ),\n    defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n        '_'\n    ),\n    MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n    defaultMonthsShortRegex = matchWord,\n    defaultMonthsRegex = matchWord;\n\nexport { defaultLocaleMonths, defaultLocaleMonthsShort };\n\nexport function localeMonths(m, format) {\n    if (!m) {\n        return isArray(this._months)\n            ? this._months\n            : this._months['standalone'];\n    }\n    return isArray(this._months)\n        ? this._months[m.month()]\n        : this._months[\n              (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                  ? 'format'\n                  : 'standalone'\n          ][m.month()];\n}\n\nexport function localeMonthsShort(m, format) {\n    if (!m) {\n        return isArray(this._monthsShort)\n            ? this._monthsShort\n            : this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort)\n        ? this._monthsShort[m.month()]\n        : this._monthsShort[\n              MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n          ][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(\n                mom,\n                ''\n            ).toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nexport function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp(\n                '^' + this.months(mom, '').replace('.', '') + '$',\n                'i'\n            );\n            this._shortMonthsParse[i] = new RegExp(\n                '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                'i'\n            );\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex =\n                '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (\n            strict &&\n            format === 'MMMM' &&\n            this._longMonthsParse[i].test(monthName)\n        ) {\n            return i;\n        } else if (\n            strict &&\n            format === 'MMM' &&\n            this._shortMonthsParse[i].test(monthName)\n        ) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nexport function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nexport function getSetMonth(value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nexport function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n}\n\nexport function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict\n            ? this._monthsShortStrictRegex\n            : this._monthsShortRegex;\n    }\n}\n\nexport function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict\n            ? this._monthsStrictRegex\n            : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse() {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(\n        '^(' + longPieces.join('|') + ')',\n        'i'\n    );\n    this._monthsShortStrictRegex = new RegExp(\n        '^(' + shortPieces.join('|') + ')',\n        'i'\n    );\n}\n"]},"metadata":{},"sourceType":"module"}