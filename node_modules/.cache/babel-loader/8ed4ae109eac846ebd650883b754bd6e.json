{"ast":null,"code":"var match1 = /\\d/,\n    //       0 - 9\nmatch2 = /\\d\\d/,\n    //      00 - 99\nmatch3 = /\\d{3}/,\n    //     000 - 999\nmatch4 = /\\d{4}/,\n    //    0000 - 9999\nmatch6 = /[+-]?\\d{6}/,\n    // -999999 - 999999\nmatch1to2 = /\\d\\d?/,\n    //       0 - 99\nmatch3to4 = /\\d\\d\\d\\d?/,\n    //     999 - 9999\nmatch5to6 = /\\d\\d\\d\\d\\d\\d?/,\n    //   99999 - 999999\nmatch1to3 = /\\d{1,3}/,\n    //       0 - 999\nmatch1to4 = /\\d{1,4}/,\n    //       0 - 9999\nmatch1to6 = /[+-]?\\d{1,6}/,\n    // -999999 - 999999\nmatchUnsigned = /\\d+/,\n    //       0 - inf\nmatchSigned = /[+-]?\\d+/,\n    //    -inf - inf\nmatchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi,\n    // +00:00 -00:00 +0000 -0000 or Z\nmatchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n    // +00 -00 +00:00 -00:00 +0000 -0000 or Z\nmatchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/,\n    // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nmatchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n    regexes;\nexport { match1, match2, match3, match4, match6, match1to2, match3to4, match5to6, match1to3, match1to4, match1to6, matchUnsigned, matchSigned, matchOffset, matchShortOffset, matchTimestamp, matchWord };\nimport hasOwnProp from '../utils/has-own-prop';\nimport isFunction from '../utils/is-function';\nregexes = {};\nexport function addRegexToken(token, regex, strictRegex) {\n  regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\nexport function getParseRegexForToken(token, config) {\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](config._strict, config._locale);\n} // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\nfunction unescapeFormat(s) {\n  return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n    return p1 || p2 || p3 || p4;\n  }));\n}\n\nexport function regexEscape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/parse/regex.js"],"names":["match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","hasOwnProp","isFunction","addRegexToken","token","regex","strictRegex","isStrict","localeData","getParseRegexForToken","config","RegExp","unescapeFormat","_strict","_locale","s","regexEscape","replace","matched","p1","p2","p3","p4"],"mappings":"AAAA,IAAIA,MAAM,GAAG,IAAb;AAAA,IAAmB;AACfC,MAAM,GAAG,MADb;AAAA,IACqB;AACjBC,MAAM,GAAG,OAFb;AAAA,IAEsB;AAClBC,MAAM,GAAG,OAHb;AAAA,IAGsB;AAClBC,MAAM,GAAG,YAJb;AAAA,IAI2B;AACvBC,SAAS,GAAG,OALhB;AAAA,IAKyB;AACrBC,SAAS,GAAG,WANhB;AAAA,IAM6B;AACzBC,SAAS,GAAG,eAPhB;AAAA,IAOiC;AAC7BC,SAAS,GAAG,SARhB;AAAA,IAQ2B;AACvBC,SAAS,GAAG,SAThB;AAAA,IAS2B;AACvBC,SAAS,GAAG,cAVhB;AAAA,IAUgC;AAC5BC,aAAa,GAAG,KAXpB;AAAA,IAW2B;AACvBC,WAAW,GAAG,UAZlB;AAAA,IAY8B;AAC1BC,WAAW,GAAG,oBAblB;AAAA,IAawC;AACpCC,gBAAgB,GAAG,yBAdvB;AAAA,IAckD;AAC9CC,cAAc,GAAG,sBAfrB;AAAA,IAe6C;AACzC;AACA;AACAC,SAAS,GAAG,uJAlBhB;AAAA,IAmBIC,OAnBJ;AAqBA,SACIjB,MADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,MAJJ,EAKIC,MALJ,EAMIC,SANJ,EAOIC,SAPJ,EAQIC,SARJ,EASIC,SATJ,EAUIC,SAVJ,EAWIC,SAXJ,EAYIC,aAZJ,EAaIC,WAbJ,EAcIC,WAdJ,EAeIC,gBAfJ,EAgBIC,cAhBJ,EAiBIC,SAjBJ;AAoBA,OAAOE,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEAF,OAAO,GAAG,EAAV;AAEA,OAAO,SAASG,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,WAArC,EAAkD;AACrDN,EAAAA,OAAO,CAACI,KAAD,CAAP,GAAiBF,UAAU,CAACG,KAAD,CAAV,GACXA,KADW,GAEX,UAAUE,QAAV,EAAoBC,UAApB,EAAgC;AAC5B,WAAOD,QAAQ,IAAID,WAAZ,GAA0BA,WAA1B,GAAwCD,KAA/C;AACH,GAJP;AAKH;AAED,OAAO,SAASI,qBAAT,CAA+BL,KAA/B,EAAsCM,MAAtC,EAA8C;AACjD,MAAI,CAACT,UAAU,CAACD,OAAD,EAAUI,KAAV,CAAf,EAAiC;AAC7B,WAAO,IAAIO,MAAJ,CAAWC,cAAc,CAACR,KAAD,CAAzB,CAAP;AACH;;AAED,SAAOJ,OAAO,CAACI,KAAD,CAAP,CAAeM,MAAM,CAACG,OAAtB,EAA+BH,MAAM,CAACI,OAAtC,CAAP;AACH,C,CAED;;AACA,SAASF,cAAT,CAAwBG,CAAxB,EAA2B;AACvB,SAAOC,WAAW,CACdD,CAAC,CACIE,OADL,CACa,IADb,EACmB,EADnB,EAEKA,OAFL,CAEa,qCAFb,EAEoD,UAC5CC,OAD4C,EAE5CC,EAF4C,EAG5CC,EAH4C,EAI5CC,EAJ4C,EAK5CC,EAL4C,EAM9C;AACE,WAAOH,EAAE,IAAIC,EAAN,IAAYC,EAAZ,IAAkBC,EAAzB;AACH,GAVL,CADc,CAAlB;AAaH;;AAED,OAAO,SAASN,WAAT,CAAqBD,CAArB,EAAwB;AAC3B,SAAOA,CAAC,CAACE,OAAF,CAAU,wBAAV,EAAoC,MAApC,CAAP;AACH","sourcesContent":["var match1 = /\\d/, //       0 - 9\n    match2 = /\\d\\d/, //      00 - 99\n    match3 = /\\d{3}/, //     000 - 999\n    match4 = /\\d{4}/, //    0000 - 9999\n    match6 = /[+-]?\\d{6}/, // -999999 - 999999\n    match1to2 = /\\d\\d?/, //       0 - 99\n    match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n    match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n    match1to3 = /\\d{1,3}/, //       0 - 999\n    match1to4 = /\\d{1,4}/, //       0 - 9999\n    match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n    matchUnsigned = /\\d+/, //       0 - inf\n    matchSigned = /[+-]?\\d+/, //    -inf - inf\n    matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n    matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n    matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n    regexes;\n\nexport {\n    match1,\n    match2,\n    match3,\n    match4,\n    match6,\n    match1to2,\n    match3to4,\n    match5to6,\n    match1to3,\n    match1to4,\n    match1to6,\n    matchUnsigned,\n    matchSigned,\n    matchOffset,\n    matchShortOffset,\n    matchTimestamp,\n    matchWord,\n};\n\nimport hasOwnProp from '../utils/has-own-prop';\nimport isFunction from '../utils/is-function';\n\nregexes = {};\n\nexport function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex)\n        ? regex\n        : function (isStrict, localeData) {\n              return isStrict && strictRegex ? strictRegex : regex;\n          };\n}\n\nexport function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(\n        s\n            .replace('\\\\', '')\n            .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                matched,\n                p1,\n                p2,\n                p3,\n                p4\n            ) {\n                return p1 || p2 || p3 || p4;\n            })\n    );\n}\n\nexport function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n"]},"metadata":{},"sourceType":"module"}