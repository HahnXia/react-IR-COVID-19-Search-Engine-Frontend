{"ast":null,"code":"import isArray from '../utils/is-array';\nimport isObject from '../utils/is-object';\nimport isObjectEmpty from '../utils/is-object-empty';\nimport isUndefined from '../utils/is-undefined';\nimport isNumber from '../utils/is-number';\nimport isDate from '../utils/is-date';\nimport map from '../utils/map';\nimport { createInvalid } from './valid';\nimport { Moment, isMoment } from '../moment/constructor';\nimport { getLocale } from '../locale/locales';\nimport { hooks } from '../utils/hooks';\nimport checkOverflow from './check-overflow';\nimport { isValid } from './valid';\nimport { configFromStringAndArray } from './from-string-and-array';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { configFromString } from './from-string';\nimport { configFromArray } from './from-array';\nimport { configFromObject } from './from-object';\n\nfunction createFromConfig(config) {\n  var res = new Moment(checkOverflow(prepareConfig(config)));\n\n  if (res._nextDay) {\n    // Adding is smart enough around DST\n    res.add(1, 'd');\n    res._nextDay = undefined;\n  }\n\n  return res;\n}\n\nexport function prepareConfig(config) {\n  var input = config._i,\n      format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || format === undefined && input === '') {\n    return createInvalid({\n      nullInput: true\n    });\n  }\n\n  if (typeof input === 'string') {\n    config._i = input = config._locale.preparse(input);\n  }\n\n  if (isMoment(input)) {\n    return new Moment(checkOverflow(input));\n  } else if (isDate(input)) {\n    config._d = input;\n  } else if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config) {\n  var input = config._i;\n\n  if (isUndefined(input)) {\n    config._d = new Date(hooks.now());\n  } else if (isDate(input)) {\n    config._d = new Date(input.valueOf());\n  } else if (typeof input === 'string') {\n    configFromString(config);\n  } else if (isArray(input)) {\n    config._a = map(input.slice(0), function (obj) {\n      return parseInt(obj, 10);\n    });\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    hooks.createFromInputFallback(config);\n  }\n}\n\nexport function createLocalOrUTC(input, format, locale, strict, isUTC) {\n  var c = {};\n\n  if (format === true || format === false) {\n    strict = format;\n    format = undefined;\n  }\n\n  if (locale === true || locale === false) {\n    strict = locale;\n    locale = undefined;\n  }\n\n  if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n    input = undefined;\n  } // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n\n\n  c._isAMomentObject = true;\n  c._useUTC = c._isUTC = isUTC;\n  c._l = locale;\n  c._i = input;\n  c._f = format;\n  c._strict = strict;\n  return createFromConfig(c);\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/create/from-anything.js"],"names":["isArray","isObject","isObjectEmpty","isUndefined","isNumber","isDate","map","createInvalid","Moment","isMoment","getLocale","hooks","checkOverflow","isValid","configFromStringAndArray","configFromStringAndFormat","configFromString","configFromArray","configFromObject","createFromConfig","config","res","prepareConfig","_nextDay","add","undefined","input","_i","format","_f","_locale","_l","nullInput","preparse","_d","configFromInput","Date","now","valueOf","_a","slice","obj","parseInt","createFromInputFallback","createLocalOrUTC","locale","strict","isUTC","c","length","_isAMomentObject","_useUTC","_isUTC","_strict"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,uBAAjC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,SAASC,wBAAT,QAAyC,yBAAzC;AACA,SAASC,yBAAT,QAA0C,0BAA1C;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,gBAAT,QAAiC,eAAjC;;AAEA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,MAAIC,GAAG,GAAG,IAAIb,MAAJ,CAAWI,aAAa,CAACU,aAAa,CAACF,MAAD,CAAd,CAAxB,CAAV;;AACA,MAAIC,GAAG,CAACE,QAAR,EAAkB;AACd;AACAF,IAAAA,GAAG,CAACG,GAAJ,CAAQ,CAAR,EAAW,GAAX;AACAH,IAAAA,GAAG,CAACE,QAAJ,GAAeE,SAAf;AACH;;AAED,SAAOJ,GAAP;AACH;;AAED,OAAO,SAASC,aAAT,CAAuBF,MAAvB,EAA+B;AAClC,MAAIM,KAAK,GAAGN,MAAM,CAACO,EAAnB;AAAA,MACIC,MAAM,GAAGR,MAAM,CAACS,EADpB;AAGAT,EAAAA,MAAM,CAACU,OAAP,GAAiBV,MAAM,CAACU,OAAP,IAAkBpB,SAAS,CAACU,MAAM,CAACW,EAAR,CAA5C;;AAEA,MAAIL,KAAK,KAAK,IAAV,IAAmBE,MAAM,KAAKH,SAAX,IAAwBC,KAAK,KAAK,EAAzD,EAA8D;AAC1D,WAAOnB,aAAa,CAAC;AAAEyB,MAAAA,SAAS,EAAE;AAAb,KAAD,CAApB;AACH;;AAED,MAAI,OAAON,KAAP,KAAiB,QAArB,EAA+B;AAC3BN,IAAAA,MAAM,CAACO,EAAP,GAAYD,KAAK,GAAGN,MAAM,CAACU,OAAP,CAAeG,QAAf,CAAwBP,KAAxB,CAApB;AACH;;AAED,MAAIjB,QAAQ,CAACiB,KAAD,CAAZ,EAAqB;AACjB,WAAO,IAAIlB,MAAJ,CAAWI,aAAa,CAACc,KAAD,CAAxB,CAAP;AACH,GAFD,MAEO,IAAIrB,MAAM,CAACqB,KAAD,CAAV,EAAmB;AACtBN,IAAAA,MAAM,CAACc,EAAP,GAAYR,KAAZ;AACH,GAFM,MAEA,IAAI1B,OAAO,CAAC4B,MAAD,CAAX,EAAqB;AACxBd,IAAAA,wBAAwB,CAACM,MAAD,CAAxB;AACH,GAFM,MAEA,IAAIQ,MAAJ,EAAY;AACfb,IAAAA,yBAAyB,CAACK,MAAD,CAAzB;AACH,GAFM,MAEA;AACHe,IAAAA,eAAe,CAACf,MAAD,CAAf;AACH;;AAED,MAAI,CAACP,OAAO,CAACO,MAAD,CAAZ,EAAsB;AAClBA,IAAAA,MAAM,CAACc,EAAP,GAAY,IAAZ;AACH;;AAED,SAAOd,MAAP;AACH;;AAED,SAASe,eAAT,CAAyBf,MAAzB,EAAiC;AAC7B,MAAIM,KAAK,GAAGN,MAAM,CAACO,EAAnB;;AACA,MAAIxB,WAAW,CAACuB,KAAD,CAAf,EAAwB;AACpBN,IAAAA,MAAM,CAACc,EAAP,GAAY,IAAIE,IAAJ,CAASzB,KAAK,CAAC0B,GAAN,EAAT,CAAZ;AACH,GAFD,MAEO,IAAIhC,MAAM,CAACqB,KAAD,CAAV,EAAmB;AACtBN,IAAAA,MAAM,CAACc,EAAP,GAAY,IAAIE,IAAJ,CAASV,KAAK,CAACY,OAAN,EAAT,CAAZ;AACH,GAFM,MAEA,IAAI,OAAOZ,KAAP,KAAiB,QAArB,EAA+B;AAClCV,IAAAA,gBAAgB,CAACI,MAAD,CAAhB;AACH,GAFM,MAEA,IAAIpB,OAAO,CAAC0B,KAAD,CAAX,EAAoB;AACvBN,IAAAA,MAAM,CAACmB,EAAP,GAAYjC,GAAG,CAACoB,KAAK,CAACc,KAAN,CAAY,CAAZ,CAAD,EAAiB,UAAUC,GAAV,EAAe;AAC3C,aAAOC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAf;AACH,KAFc,CAAf;AAGAxB,IAAAA,eAAe,CAACG,MAAD,CAAf;AACH,GALM,MAKA,IAAInB,QAAQ,CAACyB,KAAD,CAAZ,EAAqB;AACxBR,IAAAA,gBAAgB,CAACE,MAAD,CAAhB;AACH,GAFM,MAEA,IAAIhB,QAAQ,CAACsB,KAAD,CAAZ,EAAqB;AACxB;AACAN,IAAAA,MAAM,CAACc,EAAP,GAAY,IAAIE,IAAJ,CAASV,KAAT,CAAZ;AACH,GAHM,MAGA;AACHf,IAAAA,KAAK,CAACgC,uBAAN,CAA8BvB,MAA9B;AACH;AACJ;;AAED,OAAO,SAASwB,gBAAT,CAA0BlB,KAA1B,EAAiCE,MAAjC,EAAyCiB,MAAzC,EAAiDC,MAAjD,EAAyDC,KAAzD,EAAgE;AACnE,MAAIC,CAAC,GAAG,EAAR;;AAEA,MAAIpB,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAlC,EAAyC;AACrCkB,IAAAA,MAAM,GAAGlB,MAAT;AACAA,IAAAA,MAAM,GAAGH,SAAT;AACH;;AAED,MAAIoB,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAlC,EAAyC;AACrCC,IAAAA,MAAM,GAAGD,MAAT;AACAA,IAAAA,MAAM,GAAGpB,SAAT;AACH;;AAED,MACKxB,QAAQ,CAACyB,KAAD,CAAR,IAAmBxB,aAAa,CAACwB,KAAD,CAAjC,IACC1B,OAAO,CAAC0B,KAAD,CAAP,IAAkBA,KAAK,CAACuB,MAAN,KAAiB,CAFxC,EAGE;AACEvB,IAAAA,KAAK,GAAGD,SAAR;AACH,GAlBkE,CAmBnE;AACA;;;AACAuB,EAAAA,CAAC,CAACE,gBAAF,GAAqB,IAArB;AACAF,EAAAA,CAAC,CAACG,OAAF,GAAYH,CAAC,CAACI,MAAF,GAAWL,KAAvB;AACAC,EAAAA,CAAC,CAACjB,EAAF,GAAOc,MAAP;AACAG,EAAAA,CAAC,CAACrB,EAAF,GAAOD,KAAP;AACAsB,EAAAA,CAAC,CAACnB,EAAF,GAAOD,MAAP;AACAoB,EAAAA,CAAC,CAACK,OAAF,GAAYP,MAAZ;AAEA,SAAO3B,gBAAgB,CAAC6B,CAAD,CAAvB;AACH","sourcesContent":["import isArray from '../utils/is-array';\nimport isObject from '../utils/is-object';\nimport isObjectEmpty from '../utils/is-object-empty';\nimport isUndefined from '../utils/is-undefined';\nimport isNumber from '../utils/is-number';\nimport isDate from '../utils/is-date';\nimport map from '../utils/map';\nimport { createInvalid } from './valid';\nimport { Moment, isMoment } from '../moment/constructor';\nimport { getLocale } from '../locale/locales';\nimport { hooks } from '../utils/hooks';\nimport checkOverflow from './check-overflow';\nimport { isValid } from './valid';\n\nimport { configFromStringAndArray } from './from-string-and-array';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { configFromString } from './from-string';\nimport { configFromArray } from './from-array';\nimport { configFromObject } from './from-object';\n\nfunction createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nexport function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({ nullInput: true });\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    } else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nexport function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (format === true || format === false) {\n        strict = format;\n        format = undefined;\n    }\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if (\n        (isObject(input) && isObjectEmpty(input)) ||\n        (isArray(input) && input.length === 0)\n    ) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n"]},"metadata":{},"sourceType":"module"}