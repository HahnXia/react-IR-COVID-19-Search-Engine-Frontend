{"ast":null,"code":"import { normalizeObjectUnits } from '../units/aliases';\nimport { getLocale } from '../locale/locales';\nimport isDurationValid from './valid.js';\nexport function Duration(duration) {\n  var normalizedInput = normalizeObjectUnits(duration),\n      years = normalizedInput.year || 0,\n      quarters = normalizedInput.quarter || 0,\n      months = normalizedInput.month || 0,\n      weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n      days = normalizedInput.day || 0,\n      hours = normalizedInput.hour || 0,\n      minutes = normalizedInput.minute || 0,\n      seconds = normalizedInput.second || 0,\n      milliseconds = normalizedInput.millisecond || 0;\n  this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n  this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n  minutes * 6e4 + // 1000 * 60\n  hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n  // Because of dateAddRemove treats 24 hours as different from a\n  // day when working around DST, we need to store them separately\n\n  this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n  // which months you are are talking about, so we have to store\n  // it separately.\n\n  this._months = +months + quarters * 3 + years * 12;\n  this._data = {};\n  this._locale = getLocale();\n\n  this._bubble();\n}\nexport function isDuration(obj) {\n  return obj instanceof Duration;\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/duration/constructor.js"],"names":["normalizeObjectUnits","getLocale","isDurationValid","Duration","duration","normalizedInput","years","year","quarters","quarter","months","month","weeks","week","isoWeek","days","day","hours","hour","minutes","minute","seconds","second","milliseconds","millisecond","_isValid","_milliseconds","_days","_months","_data","_locale","_bubble","isDuration","obj"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,eAAP,MAA4B,YAA5B;AAEA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC/B,MAAIC,eAAe,GAAGL,oBAAoB,CAACI,QAAD,CAA1C;AAAA,MACIE,KAAK,GAAGD,eAAe,CAACE,IAAhB,IAAwB,CADpC;AAAA,MAEIC,QAAQ,GAAGH,eAAe,CAACI,OAAhB,IAA2B,CAF1C;AAAA,MAGIC,MAAM,GAAGL,eAAe,CAACM,KAAhB,IAAyB,CAHtC;AAAA,MAIIC,KAAK,GAAGP,eAAe,CAACQ,IAAhB,IAAwBR,eAAe,CAACS,OAAxC,IAAmD,CAJ/D;AAAA,MAKIC,IAAI,GAAGV,eAAe,CAACW,GAAhB,IAAuB,CALlC;AAAA,MAMIC,KAAK,GAAGZ,eAAe,CAACa,IAAhB,IAAwB,CANpC;AAAA,MAOIC,OAAO,GAAGd,eAAe,CAACe,MAAhB,IAA0B,CAPxC;AAAA,MAQIC,OAAO,GAAGhB,eAAe,CAACiB,MAAhB,IAA0B,CARxC;AAAA,MASIC,YAAY,GAAGlB,eAAe,CAACmB,WAAhB,IAA+B,CATlD;AAWA,OAAKC,QAAL,GAAgBvB,eAAe,CAACG,eAAD,CAA/B,CAZ+B,CAc/B;;AACA,OAAKqB,aAAL,GACI,CAACH,YAAD,GACAF,OAAO,GAAG,GADV,GACgB;AAChBF,EAAAA,OAAO,GAAG,GAFV,GAEgB;AAChBF,EAAAA,KAAK,GAAG,IAAR,GAAe,EAAf,GAAoB,EAJxB,CAf+B,CAmBH;AAC5B;AACA;;AACA,OAAKU,KAAL,GAAa,CAACZ,IAAD,GAAQH,KAAK,GAAG,CAA7B,CAtB+B,CAuB/B;AACA;AACA;;AACA,OAAKgB,OAAL,GAAe,CAAClB,MAAD,GAAUF,QAAQ,GAAG,CAArB,GAAyBF,KAAK,GAAG,EAAhD;AAEA,OAAKuB,KAAL,GAAa,EAAb;AAEA,OAAKC,OAAL,GAAe7B,SAAS,EAAxB;;AAEA,OAAK8B,OAAL;AACH;AAED,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC5B,SAAOA,GAAG,YAAY9B,QAAtB;AACH","sourcesContent":["import { normalizeObjectUnits } from '../units/aliases';\nimport { getLocale } from '../locale/locales';\nimport isDurationValid from './valid.js';\n\nexport function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds =\n        +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nexport function isDuration(obj) {\n    return obj instanceof Duration;\n}\n"]},"metadata":{},"sourceType":"module"}