{"ast":null,"code":"import { makeGetSet } from '../moment/get-set';\nimport { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { DATE } from './constants';\nimport toInt from '../utils/to-int'; // FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\naddUnitAlias('date', 'D'); // PRIORITY\n\naddUnitPriority('date', 9); // PARSING\n\naddRegexToken('D', match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n  // TODO: Remove \"ordinalParse\" fallback in next major release.\n  return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n});\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n  array[DATE] = toInt(input.match(match1to2)[0]);\n}); // MOMENTS\n\nexport var getSetDayOfMonth = makeGetSet('Date', true);","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/units/day-of-month.js"],"names":["makeGetSet","addFormatToken","addUnitAlias","addUnitPriority","addRegexToken","match1to2","match2","addParseToken","DATE","toInt","isStrict","locale","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","input","array","match","getSetDayOfMonth"],"mappings":"AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAiD,gBAAjD;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;;AAEAR,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,CAAN,EAAiB,IAAjB,EAAuB,MAAvB,CAAd,C,CAEA;;AAEAC,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ,C,CAEA;;AACAC,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,C,CAEA;;AAEAC,aAAa,CAAC,GAAD,EAAMC,SAAN,CAAb;AACAD,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,CAAb;AACAF,aAAa,CAAC,IAAD,EAAO,UAAUM,QAAV,EAAoBC,MAApB,EAA4B;AAC5C;AACA,SAAOD,QAAQ,GACTC,MAAM,CAACC,uBAAP,IAAkCD,MAAM,CAACE,aADhC,GAETF,MAAM,CAACG,8BAFb;AAGH,CALY,CAAb;AAOAP,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAcC,IAAd,CAAb;AACAD,aAAa,CAAC,IAAD,EAAO,UAAUQ,KAAV,EAAiBC,KAAjB,EAAwB;AACxCA,EAAAA,KAAK,CAACR,IAAD,CAAL,GAAcC,KAAK,CAACM,KAAK,CAACE,KAAN,CAAYZ,SAAZ,EAAuB,CAAvB,CAAD,CAAnB;AACH,CAFY,CAAb,C,CAIA;;AAEA,OAAO,IAAIa,gBAAgB,GAAGlB,UAAU,CAAC,MAAD,EAAS,IAAT,CAAjC","sourcesContent":["import { makeGetSet } from '../moment/get-set';\nimport { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { DATE } from './constants';\nimport toInt from '../utils/to-int';\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIORITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D', match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict\n        ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n        : locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n});\n\n// MOMENTS\n\nexport var getSetDayOfMonth = makeGetSet('Date', true);\n"]},"metadata":{},"sourceType":"module"}