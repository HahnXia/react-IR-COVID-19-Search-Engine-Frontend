{"ast":null,"code":"import extend from '../utils/extend';\nimport { createUTC } from './utc';\nimport getParsingFlags from '../create/parsing-flags';\nimport some from '../utils/some';\nexport function isValid(m) {\n  if (m._isValid == null) {\n    var flags = getParsingFlags(m),\n        parsedParts = some.call(flags.parsedDateParts, function (i) {\n      return i != null;\n    }),\n        isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n    if (m._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(m)) {\n      m._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return m._isValid;\n}\nexport function createInvalid(flags) {\n  var m = createUTC(NaN);\n\n  if (flags != null) {\n    extend(getParsingFlags(m), flags);\n  } else {\n    getParsingFlags(m).userInvalidated = true;\n  }\n\n  return m;\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/create/valid.js"],"names":["extend","createUTC","getParsingFlags","some","isValid","m","_isValid","flags","parsedParts","call","parsedDateParts","i","isNowValid","isNaN","_d","getTime","overflow","empty","invalidEra","invalidMonth","invalidWeekday","weekdayMismatch","nullInput","invalidFormat","userInvalidated","meridiem","_strict","charsLeftOver","unusedTokens","length","bigHour","undefined","Object","isFrozen","createInvalid","NaN"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,OAAO,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AACvB,MAAIA,CAAC,CAACC,QAAF,IAAc,IAAlB,EAAwB;AACpB,QAAIC,KAAK,GAAGL,eAAe,CAACG,CAAD,CAA3B;AAAA,QACIG,WAAW,GAAGL,IAAI,CAACM,IAAL,CAAUF,KAAK,CAACG,eAAhB,EAAiC,UAAUC,CAAV,EAAa;AACxD,aAAOA,CAAC,IAAI,IAAZ;AACH,KAFa,CADlB;AAAA,QAIIC,UAAU,GACN,CAACC,KAAK,CAACR,CAAC,CAACS,EAAF,CAAKC,OAAL,EAAD,CAAN,IACAR,KAAK,CAACS,QAAN,GAAiB,CADjB,IAEA,CAACT,KAAK,CAACU,KAFP,IAGA,CAACV,KAAK,CAACW,UAHP,IAIA,CAACX,KAAK,CAACY,YAJP,IAKA,CAACZ,KAAK,CAACa,cALP,IAMA,CAACb,KAAK,CAACc,eANP,IAOA,CAACd,KAAK,CAACe,SAPP,IAQA,CAACf,KAAK,CAACgB,aARP,IASA,CAAChB,KAAK,CAACiB,eATP,KAUC,CAACjB,KAAK,CAACkB,QAAP,IAAoBlB,KAAK,CAACkB,QAAN,IAAkBjB,WAVvC,CALR;;AAiBA,QAAIH,CAAC,CAACqB,OAAN,EAAe;AACXd,MAAAA,UAAU,GACNA,UAAU,IACVL,KAAK,CAACoB,aAAN,KAAwB,CADxB,IAEApB,KAAK,CAACqB,YAAN,CAAmBC,MAAnB,KAA8B,CAF9B,IAGAtB,KAAK,CAACuB,OAAN,KAAkBC,SAJtB;AAKH;;AAED,QAAIC,MAAM,CAACC,QAAP,IAAmB,IAAnB,IAA2B,CAACD,MAAM,CAACC,QAAP,CAAgB5B,CAAhB,CAAhC,EAAoD;AAChDA,MAAAA,CAAC,CAACC,QAAF,GAAaM,UAAb;AACH,KAFD,MAEO;AACH,aAAOA,UAAP;AACH;AACJ;;AACD,SAAOP,CAAC,CAACC,QAAT;AACH;AAED,OAAO,SAAS4B,aAAT,CAAuB3B,KAAvB,EAA8B;AACjC,MAAIF,CAAC,GAAGJ,SAAS,CAACkC,GAAD,CAAjB;;AACA,MAAI5B,KAAK,IAAI,IAAb,EAAmB;AACfP,IAAAA,MAAM,CAACE,eAAe,CAACG,CAAD,CAAhB,EAAqBE,KAArB,CAAN;AACH,GAFD,MAEO;AACHL,IAAAA,eAAe,CAACG,CAAD,CAAf,CAAmBmB,eAAnB,GAAqC,IAArC;AACH;;AAED,SAAOnB,CAAP;AACH","sourcesContent":["import extend from '../utils/extend';\nimport { createUTC } from './utc';\nimport getParsingFlags from '../create/parsing-flags';\nimport some from '../utils/some';\n\nexport function isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m),\n            parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            }),\n            isNowValid =\n                !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidEra &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid =\n                isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        } else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nexport function createInvalid(flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    } else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n"]},"metadata":{},"sourceType":"module"}