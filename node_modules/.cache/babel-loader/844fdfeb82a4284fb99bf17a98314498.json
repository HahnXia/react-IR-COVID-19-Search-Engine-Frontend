{"ast":null,"code":"import hasOwnProp from '../utils/has-own-prop';\nimport isNumber from '../utils/is-number';\nimport toInt from '../utils/to-int';\nvar tokens = {};\nexport function addParseToken(token, callback) {\n  var i,\n      func = callback;\n\n  if (typeof token === 'string') {\n    token = [token];\n  }\n\n  if (isNumber(callback)) {\n    func = function (input, array) {\n      array[callback] = toInt(input);\n    };\n  }\n\n  for (i = 0; i < token.length; i++) {\n    tokens[token[i]] = func;\n  }\n}\nexport function addWeekParseToken(token, callback) {\n  addParseToken(token, function (input, array, config, token) {\n    config._w = config._w || {};\n    callback(input, config._w, config, token);\n  });\n}\nexport function addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/parse/token.js"],"names":["hasOwnProp","isNumber","toInt","tokens","addParseToken","token","callback","i","func","input","array","length","addWeekParseToken","config","_w","addTimeToArrayFromToken","_a"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,IAAIC,MAAM,GAAG,EAAb;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;AAC3C,MAAIC,CAAJ;AAAA,MACIC,IAAI,GAAGF,QADX;;AAEA,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACH;;AACD,MAAIJ,QAAQ,CAACK,QAAD,CAAZ,EAAwB;AACpBE,IAAAA,IAAI,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAC3BA,MAAAA,KAAK,CAACJ,QAAD,CAAL,GAAkBJ,KAAK,CAACO,KAAD,CAAvB;AACH,KAFD;AAGH;;AACD,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,KAAK,CAACM,MAAtB,EAA8BJ,CAAC,EAA/B,EAAmC;AAC/BJ,IAAAA,MAAM,CAACE,KAAK,CAACE,CAAD,CAAN,CAAN,GAAmBC,IAAnB;AACH;AACJ;AAED,OAAO,SAASI,iBAAT,CAA2BP,KAA3B,EAAkCC,QAAlC,EAA4C;AAC/CF,EAAAA,aAAa,CAACC,KAAD,EAAQ,UAAUI,KAAV,EAAiBC,KAAjB,EAAwBG,MAAxB,EAAgCR,KAAhC,EAAuC;AACxDQ,IAAAA,MAAM,CAACC,EAAP,GAAYD,MAAM,CAACC,EAAP,IAAa,EAAzB;AACAR,IAAAA,QAAQ,CAACG,KAAD,EAAQI,MAAM,CAACC,EAAf,EAAmBD,MAAnB,EAA2BR,KAA3B,CAAR;AACH,GAHY,CAAb;AAIH;AAED,OAAO,SAASU,uBAAT,CAAiCV,KAAjC,EAAwCI,KAAxC,EAA+CI,MAA/C,EAAuD;AAC1D,MAAIJ,KAAK,IAAI,IAAT,IAAiBT,UAAU,CAACG,MAAD,EAASE,KAAT,CAA/B,EAAgD;AAC5CF,IAAAA,MAAM,CAACE,KAAD,CAAN,CAAcI,KAAd,EAAqBI,MAAM,CAACG,EAA5B,EAAgCH,MAAhC,EAAwCR,KAAxC;AACH;AACJ","sourcesContent":["import hasOwnProp from '../utils/has-own-prop';\nimport isNumber from '../utils/is-number';\nimport toInt from '../utils/to-int';\n\nvar tokens = {};\n\nexport function addParseToken(token, callback) {\n    var i,\n        func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nexport function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nexport function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}