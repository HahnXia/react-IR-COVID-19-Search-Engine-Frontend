{"ast":null,"code":"export var defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  w: 'a week',\n  ww: '%d weeks',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\nimport isFunction from '../utils/is-function';\nexport function relativeTime(number, withoutSuffix, string, isFuture) {\n  var output = this._relativeTime[string];\n  return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n}\nexport function pastFuture(diff, output) {\n  var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n  return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/locale/relative.js"],"names":["defaultRelativeTime","future","past","s","ss","m","mm","h","hh","d","dd","w","ww","M","MM","y","yy","isFunction","relativeTime","number","withoutSuffix","string","isFuture","output","_relativeTime","replace","pastFuture","diff","format"],"mappings":"AAAA,OAAO,IAAIA,mBAAmB,GAAG;AAC7BC,EAAAA,MAAM,EAAE,OADqB;AAE7BC,EAAAA,IAAI,EAAE,QAFuB;AAG7BC,EAAAA,CAAC,EAAE,eAH0B;AAI7BC,EAAAA,EAAE,EAAE,YAJyB;AAK7BC,EAAAA,CAAC,EAAE,UAL0B;AAM7BC,EAAAA,EAAE,EAAE,YANyB;AAO7BC,EAAAA,CAAC,EAAE,SAP0B;AAQ7BC,EAAAA,EAAE,EAAE,UARyB;AAS7BC,EAAAA,CAAC,EAAE,OAT0B;AAU7BC,EAAAA,EAAE,EAAE,SAVyB;AAW7BC,EAAAA,CAAC,EAAE,QAX0B;AAY7BC,EAAAA,EAAE,EAAE,UAZyB;AAa7BC,EAAAA,CAAC,EAAE,SAb0B;AAc7BC,EAAAA,EAAE,EAAE,WAdyB;AAe7BC,EAAAA,CAAC,EAAE,QAf0B;AAgB7BC,EAAAA,EAAE,EAAE;AAhByB,CAA1B;AAmBP,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,aAA9B,EAA6CC,MAA7C,EAAqDC,QAArD,EAA+D;AAClE,MAAIC,MAAM,GAAG,KAAKC,aAAL,CAAmBH,MAAnB,CAAb;AACA,SAAOJ,UAAU,CAACM,MAAD,CAAV,GACDA,MAAM,CAACJ,MAAD,EAASC,aAAT,EAAwBC,MAAxB,EAAgCC,QAAhC,CADL,GAEDC,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsBN,MAAtB,CAFN;AAGH;AAED,OAAO,SAASO,UAAT,CAAoBC,IAApB,EAA0BJ,MAA1B,EAAkC;AACrC,MAAIK,MAAM,GAAG,KAAKJ,aAAL,CAAmBG,IAAI,GAAG,CAAP,GAAW,QAAX,GAAsB,MAAzC,CAAb;AACA,SAAOV,UAAU,CAACW,MAAD,CAAV,GAAqBA,MAAM,CAACL,MAAD,CAA3B,GAAsCK,MAAM,CAACH,OAAP,CAAe,KAAf,EAAsBF,MAAtB,CAA7C;AACH","sourcesContent":["export var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    w: 'a week',\n    ww: '%d weeks',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n};\n\nimport isFunction from '../utils/is-function';\n\nexport function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output)\n        ? output(number, withoutSuffix, string, isFuture)\n        : output.replace(/%d/i, number);\n}\n\nexport function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n"]},"metadata":{},"sourceType":"module"}