{"ast":null,"code":"import { hooks } from '../utils/hooks';\nimport isUndefined from '../utils/is-undefined';\nimport getParsingFlags from '../create/parsing-flags'; // Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\n\nvar momentProperties = hooks.momentProperties = [],\n    updateInProgress = false;\nexport function copyConfig(to, from) {\n  var i, prop, val;\n\n  if (!isUndefined(from._isAMomentObject)) {\n    to._isAMomentObject = from._isAMomentObject;\n  }\n\n  if (!isUndefined(from._i)) {\n    to._i = from._i;\n  }\n\n  if (!isUndefined(from._f)) {\n    to._f = from._f;\n  }\n\n  if (!isUndefined(from._l)) {\n    to._l = from._l;\n  }\n\n  if (!isUndefined(from._strict)) {\n    to._strict = from._strict;\n  }\n\n  if (!isUndefined(from._tzm)) {\n    to._tzm = from._tzm;\n  }\n\n  if (!isUndefined(from._isUTC)) {\n    to._isUTC = from._isUTC;\n  }\n\n  if (!isUndefined(from._offset)) {\n    to._offset = from._offset;\n  }\n\n  if (!isUndefined(from._pf)) {\n    to._pf = getParsingFlags(from);\n  }\n\n  if (!isUndefined(from._locale)) {\n    to._locale = from._locale;\n  }\n\n  if (momentProperties.length > 0) {\n    for (i = 0; i < momentProperties.length; i++) {\n      prop = momentProperties[i];\n      val = from[prop];\n\n      if (!isUndefined(val)) {\n        to[prop] = val;\n      }\n    }\n  }\n\n  return to;\n} // Moment prototype object\n\nexport function Moment(config) {\n  copyConfig(this, config);\n  this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n  if (!this.isValid()) {\n    this._d = new Date(NaN);\n  } // Prevent infinite loop in case updateOffset creates new moment\n  // objects.\n\n\n  if (updateInProgress === false) {\n    updateInProgress = true;\n    hooks.updateOffset(this);\n    updateInProgress = false;\n  }\n}\nexport function isMoment(obj) {\n  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/moment/constructor.js"],"names":["hooks","isUndefined","getParsingFlags","momentProperties","updateInProgress","copyConfig","to","from","i","prop","val","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","_locale","length","Moment","config","_d","Date","getTime","NaN","isValid","updateOffset","isMoment","obj"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;AACA;;AACA,IAAIC,gBAAgB,GAAIH,KAAK,CAACG,gBAAN,GAAyB,EAAjD;AAAA,IACIC,gBAAgB,GAAG,KADvB;AAGA,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,IAAxB,EAA8B;AACjC,MAAIC,CAAJ,EAAOC,IAAP,EAAaC,GAAb;;AAEA,MAAI,CAACT,WAAW,CAACM,IAAI,CAACI,gBAAN,CAAhB,EAAyC;AACrCL,IAAAA,EAAE,CAACK,gBAAH,GAAsBJ,IAAI,CAACI,gBAA3B;AACH;;AACD,MAAI,CAACV,WAAW,CAACM,IAAI,CAACK,EAAN,CAAhB,EAA2B;AACvBN,IAAAA,EAAE,CAACM,EAAH,GAAQL,IAAI,CAACK,EAAb;AACH;;AACD,MAAI,CAACX,WAAW,CAACM,IAAI,CAACM,EAAN,CAAhB,EAA2B;AACvBP,IAAAA,EAAE,CAACO,EAAH,GAAQN,IAAI,CAACM,EAAb;AACH;;AACD,MAAI,CAACZ,WAAW,CAACM,IAAI,CAACO,EAAN,CAAhB,EAA2B;AACvBR,IAAAA,EAAE,CAACQ,EAAH,GAAQP,IAAI,CAACO,EAAb;AACH;;AACD,MAAI,CAACb,WAAW,CAACM,IAAI,CAACQ,OAAN,CAAhB,EAAgC;AAC5BT,IAAAA,EAAE,CAACS,OAAH,GAAaR,IAAI,CAACQ,OAAlB;AACH;;AACD,MAAI,CAACd,WAAW,CAACM,IAAI,CAACS,IAAN,CAAhB,EAA6B;AACzBV,IAAAA,EAAE,CAACU,IAAH,GAAUT,IAAI,CAACS,IAAf;AACH;;AACD,MAAI,CAACf,WAAW,CAACM,IAAI,CAACU,MAAN,CAAhB,EAA+B;AAC3BX,IAAAA,EAAE,CAACW,MAAH,GAAYV,IAAI,CAACU,MAAjB;AACH;;AACD,MAAI,CAAChB,WAAW,CAACM,IAAI,CAACW,OAAN,CAAhB,EAAgC;AAC5BZ,IAAAA,EAAE,CAACY,OAAH,GAAaX,IAAI,CAACW,OAAlB;AACH;;AACD,MAAI,CAACjB,WAAW,CAACM,IAAI,CAACY,GAAN,CAAhB,EAA4B;AACxBb,IAAAA,EAAE,CAACa,GAAH,GAASjB,eAAe,CAACK,IAAD,CAAxB;AACH;;AACD,MAAI,CAACN,WAAW,CAACM,IAAI,CAACa,OAAN,CAAhB,EAAgC;AAC5Bd,IAAAA,EAAE,CAACc,OAAH,GAAab,IAAI,CAACa,OAAlB;AACH;;AAED,MAAIjB,gBAAgB,CAACkB,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,SAAKb,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,gBAAgB,CAACkB,MAAjC,EAAyCb,CAAC,EAA1C,EAA8C;AAC1CC,MAAAA,IAAI,GAAGN,gBAAgB,CAACK,CAAD,CAAvB;AACAE,MAAAA,GAAG,GAAGH,IAAI,CAACE,IAAD,CAAV;;AACA,UAAI,CAACR,WAAW,CAACS,GAAD,CAAhB,EAAuB;AACnBJ,QAAAA,EAAE,CAACG,IAAD,CAAF,GAAWC,GAAX;AACH;AACJ;AACJ;;AAED,SAAOJ,EAAP;AACH,C,CAED;;AACA,OAAO,SAASgB,MAAT,CAAgBC,MAAhB,EAAwB;AAC3BlB,EAAAA,UAAU,CAAC,IAAD,EAAOkB,MAAP,CAAV;AACA,OAAKC,EAAL,GAAU,IAAIC,IAAJ,CAASF,MAAM,CAACC,EAAP,IAAa,IAAb,GAAoBD,MAAM,CAACC,EAAP,CAAUE,OAAV,EAApB,GAA0CC,GAAnD,CAAV;;AACA,MAAI,CAAC,KAAKC,OAAL,EAAL,EAAqB;AACjB,SAAKJ,EAAL,GAAU,IAAIC,IAAJ,CAASE,GAAT,CAAV;AACH,GAL0B,CAM3B;AACA;;;AACA,MAAIvB,gBAAgB,KAAK,KAAzB,EAAgC;AAC5BA,IAAAA,gBAAgB,GAAG,IAAnB;AACAJ,IAAAA,KAAK,CAAC6B,YAAN,CAAmB,IAAnB;AACAzB,IAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ;AAED,OAAO,SAAS0B,QAAT,CAAkBC,GAAlB,EAAuB;AAC1B,SACIA,GAAG,YAAYT,MAAf,IAA0BS,GAAG,IAAI,IAAP,IAAeA,GAAG,CAACpB,gBAAJ,IAAwB,IADrE;AAGH","sourcesContent":["import { hooks } from '../utils/hooks';\nimport isUndefined from '../utils/is-undefined';\nimport getParsingFlags from '../create/parsing-flags';\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = (hooks.momentProperties = []),\n    updateInProgress = false;\n\nexport function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\n// Moment prototype object\nexport function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nexport function isMoment(obj) {\n    return (\n        obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n    );\n}\n"]},"metadata":{},"sourceType":"module"}