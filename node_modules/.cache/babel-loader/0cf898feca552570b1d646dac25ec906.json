{"ast":null,"code":"import { daysInYear } from './year';\nimport { createUTCDate } from '../create/date-from-array'; // start-of-first-week - start-of-year\n\nfunction firstWeekOffset(year, dow, doy) {\n  var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  fwd = 7 + dow - doy,\n      // first-week day local weekday -- which local weekday is fwd\n  fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n  return -fwdlw + fwd - 1;\n} // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\nexport function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear,\n      resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\nexport function weekOfYear(mom, dow, doy) {\n  var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek,\n      resYear;\n\n  if (week < 1) {\n    resYear = mom.year() - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(mom.year(), dow, doy)) {\n    resWeek = week - weeksInYear(mom.year(), dow, doy);\n    resYear = mom.year() + 1;\n  } else {\n    resYear = mom.year();\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\nexport function weeksInYear(year, dow, doy) {\n  var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/units/week-calendar-utils.js"],"names":["daysInYear","createUTCDate","firstWeekOffset","year","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","dayOfYear","resYear","resDayOfYear","weekOfYear","mom","Math","floor","resWeek","weeksInYear","weekOffsetNext"],"mappings":"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","sourcesContent":["import { daysInYear } from './year';\nimport { createUTCDate } from '../create/date-from-array';\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nexport function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear,\n    };\n}\n\nexport function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear,\n    };\n}\n\nexport function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n"]},"metadata":{},"sourceType":"module"}