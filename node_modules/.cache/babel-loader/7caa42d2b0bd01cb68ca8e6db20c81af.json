{"ast":null,"code":"import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addWeekParseToken } from '../parse/token';\nimport toInt from '../utils/to-int';\nimport { weekOfYear } from './week-calendar-utils'; // FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W'); // PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5); // PARSING\n\naddRegexToken('w', match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W', match1to2);\naddRegexToken('WW', match1to2, match2);\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n  week[token.substr(0, 1)] = toInt(input);\n}); // HELPERS\n// LOCALES\n\nexport function localeWeek(mom) {\n  return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\nexport var defaultLocaleWeek = {\n  dow: 0,\n  // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n};\nexport function localeFirstDayOfWeek() {\n  return this._week.dow;\n}\nexport function localeFirstDayOfYear() {\n  return this._week.doy;\n} // MOMENTS\n\nexport function getSetWeek(input) {\n  var week = this.localeData().week(this);\n  return input == null ? week : this.add((input - week) * 7, 'd');\n}\nexport function getSetISOWeek(input) {\n  var week = weekOfYear(this, 1, 4).week;\n  return input == null ? week : this.add((input - week) * 7, 'd');\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/units/week.js"],"names":["addFormatToken","addUnitAlias","addUnitPriority","addRegexToken","match1to2","match2","addWeekParseToken","toInt","weekOfYear","input","week","config","token","substr","localeWeek","mom","_week","dow","doy","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","localeData","add","getSetISOWeek"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAiD,gBAAjD;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CAEA;;AAEAR,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,CAAN,EAAiB,IAAjB,EAAuB,MAAvB,CAAd;AACAA,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,CAAN,EAAiB,IAAjB,EAAuB,SAAvB,CAAd,C,CAEA;;AAEAC,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ;AACAA,YAAY,CAAC,SAAD,EAAY,GAAZ,CAAZ,C,CAEA;;AAEAC,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf;AACAA,eAAe,CAAC,SAAD,EAAY,CAAZ,CAAf,C,CAEA;;AAEAC,aAAa,CAAC,GAAD,EAAMC,SAAN,CAAb;AACAD,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,CAAb;AACAF,aAAa,CAAC,GAAD,EAAMC,SAAN,CAAb;AACAD,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,CAAb;AAEAC,iBAAiB,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,CAAD,EAAyB,UACtCG,KADsC,EAEtCC,IAFsC,EAGtCC,MAHsC,EAItCC,KAJsC,EAKxC;AACEF,EAAAA,IAAI,CAACE,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,CAAJ,GAA2BN,KAAK,CAACE,KAAD,CAAhC;AACH,CAPgB,CAAjB,C,CASA;AAEA;;AAEA,OAAO,SAASK,UAAT,CAAoBC,GAApB,EAAyB;AAC5B,SAAOP,UAAU,CAACO,GAAD,EAAM,KAAKC,KAAL,CAAWC,GAAjB,EAAsB,KAAKD,KAAL,CAAWE,GAAjC,CAAV,CAAgDR,IAAvD;AACH;AAED,OAAO,IAAIS,iBAAiB,GAAG;AAC3BF,EAAAA,GAAG,EAAE,CADsB;AACnB;AACRC,EAAAA,GAAG,EAAE,CAFsB,CAEnB;;AAFmB,CAAxB;AAKP,OAAO,SAASE,oBAAT,GAAgC;AACnC,SAAO,KAAKJ,KAAL,CAAWC,GAAlB;AACH;AAED,OAAO,SAASI,oBAAT,GAAgC;AACnC,SAAO,KAAKL,KAAL,CAAWE,GAAlB;AACH,C,CAED;;AAEA,OAAO,SAASI,UAAT,CAAoBb,KAApB,EAA2B;AAC9B,MAAIC,IAAI,GAAG,KAAKa,UAAL,GAAkBb,IAAlB,CAAuB,IAAvB,CAAX;AACA,SAAOD,KAAK,IAAI,IAAT,GAAgBC,IAAhB,GAAuB,KAAKc,GAAL,CAAS,CAACf,KAAK,GAAGC,IAAT,IAAiB,CAA1B,EAA6B,GAA7B,CAA9B;AACH;AAED,OAAO,SAASe,aAAT,CAAuBhB,KAAvB,EAA8B;AACjC,MAAIC,IAAI,GAAGF,UAAU,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,CAAV,CAAuBE,IAAlC;AACA,SAAOD,KAAK,IAAI,IAAT,GAAgBC,IAAhB,GAAuB,KAAKc,GAAL,CAAS,CAACf,KAAK,GAAGC,IAAT,IAAiB,CAA1B,EAA6B,GAA7B,CAA9B;AACH","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addWeekParseToken } from '../parse/token';\nimport toInt from '../utils/to-int';\nimport { weekOfYear } from './week-calendar-utils';\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w', match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W', match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n    input,\n    week,\n    config,\n    token\n) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nexport function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nexport var defaultLocaleWeek = {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 6th is the first week of the year.\n};\n\nexport function localeFirstDayOfWeek() {\n    return this._week.dow;\n}\n\nexport function localeFirstDayOfYear() {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nexport function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nexport function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n"]},"metadata":{},"sourceType":"module"}