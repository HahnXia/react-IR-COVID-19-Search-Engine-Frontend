{"ast":null,"code":"import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match3, match1to3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport toInt from '../utils/to-int'; // FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\naddUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\naddUnitPriority('dayOfYear', 4); // PARSING\n\naddRegexToken('DDD', match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n  config._dayOfYear = toInt(input);\n}); // HELPERS\n// MOMENTS\n\nexport function getSetDayOfYear(input) {\n  var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n  return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/units/day-of-year.js"],"names":["addFormatToken","addUnitAlias","addUnitPriority","addRegexToken","match3","match1to3","addParseToken","toInt","input","array","config","_dayOfYear","getSetDayOfYear","dayOfYear","Math","round","clone","startOf","add"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,SAAhC,QAAiD,gBAAjD;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;;AAEAP,cAAc,CAAC,KAAD,EAAQ,CAAC,MAAD,EAAS,CAAT,CAAR,EAAqB,MAArB,EAA6B,WAA7B,CAAd,C,CAEA;;AAEAC,YAAY,CAAC,WAAD,EAAc,KAAd,CAAZ,C,CAEA;;AACAC,eAAe,CAAC,WAAD,EAAc,CAAd,CAAf,C,CAEA;;AAEAC,aAAa,CAAC,KAAD,EAAQE,SAAR,CAAb;AACAF,aAAa,CAAC,MAAD,EAASC,MAAT,CAAb;AACAE,aAAa,CAAC,CAAC,KAAD,EAAQ,MAAR,CAAD,EAAkB,UAAUE,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC3DA,EAAAA,MAAM,CAACC,UAAP,GAAoBJ,KAAK,CAACC,KAAD,CAAzB;AACH,CAFY,CAAb,C,CAIA;AAEA;;AAEA,OAAO,SAASI,eAAT,CAAyBJ,KAAzB,EAAgC;AACnC,MAAIK,SAAS,GACTC,IAAI,CAACC,KAAL,CACI,CAAC,KAAKC,KAAL,GAAaC,OAAb,CAAqB,KAArB,IAA8B,KAAKD,KAAL,GAAaC,OAAb,CAAqB,MAArB,CAA/B,IAA+D,KADnE,IAEI,CAHR;AAIA,SAAOT,KAAK,IAAI,IAAT,GAAgBK,SAAhB,GAA4B,KAAKK,GAAL,CAASV,KAAK,GAAGK,SAAjB,EAA4B,GAA5B,CAAnC;AACH","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match3, match1to3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport toInt from '../utils/to-int';\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD', match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nexport function getSetDayOfYear(input) {\n    var dayOfYear =\n        Math.round(\n            (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n        ) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n}\n"]},"metadata":{},"sourceType":"module"}