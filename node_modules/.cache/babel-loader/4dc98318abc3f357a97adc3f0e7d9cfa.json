{"ast":null,"code":"import { makeGetSet } from '../moment/get-set';\nimport { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { HOUR, MINUTE, SECOND } from './constants';\nimport toInt from '../utils/to-int';\nimport zeroFill from '../utils/zero-fill';\nimport getParsingFlags from '../create/parsing-flags'; // FORMATTING\n\nfunction hFormat() {\n  return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n  return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\naddFormatToken('hmm', 0, 0, function () {\n  return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\naddFormatToken('hmmss', 0, 0, function () {\n  return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n});\naddFormatToken('Hmm', 0, 0, function () {\n  return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\naddFormatToken('Hmmss', 0, 0, function () {\n  return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem(token, lowercase) {\n  addFormatToken(token, 0, 0, function () {\n    return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n  });\n}\n\nmeridiem('a', true);\nmeridiem('A', false); // ALIASES\n\naddUnitAlias('hour', 'h'); // PRIORITY\n\naddUnitPriority('hour', 13); // PARSING\n\nfunction matchMeridiem(isStrict, locale) {\n  return locale._meridiemParse;\n}\n\naddRegexToken('a', matchMeridiem);\naddRegexToken('A', matchMeridiem);\naddRegexToken('H', match1to2);\naddRegexToken('h', match1to2);\naddRegexToken('k', match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n  var kInput = toInt(input);\n  array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n  config._isPm = config._locale.isPM(input);\n  config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n  array[HOUR] = toInt(input);\n  getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n  var pos = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos));\n  array[MINUTE] = toInt(input.substr(pos));\n  getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n  var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos1));\n  array[MINUTE] = toInt(input.substr(pos1, 2));\n  array[SECOND] = toInt(input.substr(pos2));\n  getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n  var pos = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos));\n  array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n  var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos1));\n  array[MINUTE] = toInt(input.substr(pos1, 2));\n  array[SECOND] = toInt(input.substr(pos2));\n}); // LOCALES\n\nexport function localeIsPM(input) {\n  // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n  // Using charAt should be more compatible.\n  return (input + '').toLowerCase().charAt(0) === 'p';\n}\nexport var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n    // Setting the hour should keep the time, because the user explicitly\n// specified which hour they want. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\ngetSetHour = makeGetSet('Hours', true);\nexport function localeMeridiem(hours, minutes, isLower) {\n  if (hours > 11) {\n    return isLower ? 'pm' : 'PM';\n  } else {\n    return isLower ? 'am' : 'AM';\n  }\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/units/hour.js"],"names":["makeGetSet","addFormatToken","addUnitAlias","addUnitPriority","addRegexToken","match1to2","match2","match3to4","match5to6","addParseToken","HOUR","MINUTE","SECOND","toInt","zeroFill","getParsingFlags","hFormat","hours","kFormat","apply","minutes","seconds","meridiem","token","lowercase","localeData","matchMeridiem","isStrict","locale","_meridiemParse","input","array","config","kInput","_isPm","_locale","isPM","_meridiem","bigHour","pos","length","substr","pos1","pos2","localeIsPM","toLowerCase","charAt","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower"],"mappings":"AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACIC,aADJ,EAEIC,SAFJ,EAGIC,MAHJ,EAIIC,SAJJ,EAKIC,SALJ,QAMO,gBANP;AAOA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;;AAEA,SAASC,OAAT,GAAmB;AACf,SAAO,KAAKC,KAAL,KAAe,EAAf,IAAqB,EAA5B;AACH;;AAED,SAASC,OAAT,GAAmB;AACf,SAAO,KAAKD,KAAL,MAAgB,EAAvB;AACH;;AAEDhB,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,CAAN,EAAiB,CAAjB,EAAoB,MAApB,CAAd;AACAA,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,CAAN,EAAiB,CAAjB,EAAoBe,OAApB,CAAd;AACAf,cAAc,CAAC,GAAD,EAAM,CAAC,IAAD,EAAO,CAAP,CAAN,EAAiB,CAAjB,EAAoBiB,OAApB,CAAd;AAEAjB,cAAc,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,YAAY;AACpC,SAAO,KAAKe,OAAO,CAACG,KAAR,CAAc,IAAd,CAAL,GAA2BL,QAAQ,CAAC,KAAKM,OAAL,EAAD,EAAiB,CAAjB,CAA1C;AACH,CAFa,CAAd;AAIAnB,cAAc,CAAC,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB,YAAY;AACtC,SACI,KACAe,OAAO,CAACG,KAAR,CAAc,IAAd,CADA,GAEAL,QAAQ,CAAC,KAAKM,OAAL,EAAD,EAAiB,CAAjB,CAFR,GAGAN,QAAQ,CAAC,KAAKO,OAAL,EAAD,EAAiB,CAAjB,CAJZ;AAMH,CAPa,CAAd;AASApB,cAAc,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,YAAY;AACpC,SAAO,KAAK,KAAKgB,KAAL,EAAL,GAAoBH,QAAQ,CAAC,KAAKM,OAAL,EAAD,EAAiB,CAAjB,CAAnC;AACH,CAFa,CAAd;AAIAnB,cAAc,CAAC,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB,YAAY;AACtC,SACI,KACA,KAAKgB,KAAL,EADA,GAEAH,QAAQ,CAAC,KAAKM,OAAL,EAAD,EAAiB,CAAjB,CAFR,GAGAN,QAAQ,CAAC,KAAKO,OAAL,EAAD,EAAiB,CAAjB,CAJZ;AAMH,CAPa,CAAd;;AASA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,SAAzB,EAAoC;AAChCvB,EAAAA,cAAc,CAACsB,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,YAAY;AACpC,WAAO,KAAKE,UAAL,GAAkBH,QAAlB,CACH,KAAKL,KAAL,EADG,EAEH,KAAKG,OAAL,EAFG,EAGHI,SAHG,CAAP;AAKH,GANa,CAAd;AAOH;;AAEDF,QAAQ,CAAC,GAAD,EAAM,IAAN,CAAR;AACAA,QAAQ,CAAC,GAAD,EAAM,KAAN,CAAR,C,CAEA;;AAEApB,YAAY,CAAC,MAAD,EAAS,GAAT,CAAZ,C,CAEA;;AACAC,eAAe,CAAC,MAAD,EAAS,EAAT,CAAf,C,CAEA;;AAEA,SAASuB,aAAT,CAAuBC,QAAvB,EAAiCC,MAAjC,EAAyC;AACrC,SAAOA,MAAM,CAACC,cAAd;AACH;;AAEDzB,aAAa,CAAC,GAAD,EAAMsB,aAAN,CAAb;AACAtB,aAAa,CAAC,GAAD,EAAMsB,aAAN,CAAb;AACAtB,aAAa,CAAC,GAAD,EAAMC,SAAN,CAAb;AACAD,aAAa,CAAC,GAAD,EAAMC,SAAN,CAAb;AACAD,aAAa,CAAC,GAAD,EAAMC,SAAN,CAAb;AACAD,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,CAAb;AACAF,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,CAAb;AACAF,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBC,MAAlB,CAAb;AAEAF,aAAa,CAAC,KAAD,EAAQG,SAAR,CAAb;AACAH,aAAa,CAAC,OAAD,EAAUI,SAAV,CAAb;AACAJ,aAAa,CAAC,KAAD,EAAQG,SAAR,CAAb;AACAH,aAAa,CAAC,OAAD,EAAUI,SAAV,CAAb;AAEAC,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAcC,IAAd,CAAb;AACAD,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAc,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACvD,MAAIC,MAAM,GAAGpB,KAAK,CAACiB,KAAD,CAAlB;AACAC,EAAAA,KAAK,CAACrB,IAAD,CAAL,GAAcuB,MAAM,KAAK,EAAX,GAAgB,CAAhB,GAAoBA,MAAlC;AACH,CAHY,CAAb;AAIAxB,aAAa,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACtDA,EAAAA,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBN,KAApB,CAAf;AACAE,EAAAA,MAAM,CAACK,SAAP,GAAmBP,KAAnB;AACH,CAHY,CAAb;AAIArB,aAAa,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAAc,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACvDD,EAAAA,KAAK,CAACrB,IAAD,CAAL,GAAcG,KAAK,CAACiB,KAAD,CAAnB;AACAf,EAAAA,eAAe,CAACiB,MAAD,CAAf,CAAwBM,OAAxB,GAAkC,IAAlC;AACH,CAHY,CAAb;AAIA7B,aAAa,CAAC,KAAD,EAAQ,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACjD,MAAIO,GAAG,GAAGT,KAAK,CAACU,MAAN,GAAe,CAAzB;AACAT,EAAAA,KAAK,CAACrB,IAAD,CAAL,GAAcG,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBF,GAAhB,CAAD,CAAnB;AACAR,EAAAA,KAAK,CAACpB,MAAD,CAAL,GAAgBE,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAaF,GAAb,CAAD,CAArB;AACAxB,EAAAA,eAAe,CAACiB,MAAD,CAAf,CAAwBM,OAAxB,GAAkC,IAAlC;AACH,CALY,CAAb;AAMA7B,aAAa,CAAC,OAAD,EAAU,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACnD,MAAIU,IAAI,GAAGZ,KAAK,CAACU,MAAN,GAAe,CAA1B;AAAA,MACIG,IAAI,GAAGb,KAAK,CAACU,MAAN,GAAe,CAD1B;AAEAT,EAAAA,KAAK,CAACrB,IAAD,CAAL,GAAcG,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBC,IAAhB,CAAD,CAAnB;AACAX,EAAAA,KAAK,CAACpB,MAAD,CAAL,GAAgBE,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAaC,IAAb,EAAmB,CAAnB,CAAD,CAArB;AACAX,EAAAA,KAAK,CAACnB,MAAD,CAAL,GAAgBC,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAaE,IAAb,CAAD,CAArB;AACA5B,EAAAA,eAAe,CAACiB,MAAD,CAAf,CAAwBM,OAAxB,GAAkC,IAAlC;AACH,CAPY,CAAb;AAQA7B,aAAa,CAAC,KAAD,EAAQ,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACjD,MAAIO,GAAG,GAAGT,KAAK,CAACU,MAAN,GAAe,CAAzB;AACAT,EAAAA,KAAK,CAACrB,IAAD,CAAL,GAAcG,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBF,GAAhB,CAAD,CAAnB;AACAR,EAAAA,KAAK,CAACpB,MAAD,CAAL,GAAgBE,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAaF,GAAb,CAAD,CAArB;AACH,CAJY,CAAb;AAKA9B,aAAa,CAAC,OAAD,EAAU,UAAUqB,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AACnD,MAAIU,IAAI,GAAGZ,KAAK,CAACU,MAAN,GAAe,CAA1B;AAAA,MACIG,IAAI,GAAGb,KAAK,CAACU,MAAN,GAAe,CAD1B;AAEAT,EAAAA,KAAK,CAACrB,IAAD,CAAL,GAAcG,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgBC,IAAhB,CAAD,CAAnB;AACAX,EAAAA,KAAK,CAACpB,MAAD,CAAL,GAAgBE,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAaC,IAAb,EAAmB,CAAnB,CAAD,CAArB;AACAX,EAAAA,KAAK,CAACnB,MAAD,CAAL,GAAgBC,KAAK,CAACiB,KAAK,CAACW,MAAN,CAAaE,IAAb,CAAD,CAArB;AACH,CANY,CAAb,C,CAQA;;AAEA,OAAO,SAASC,UAAT,CAAoBd,KAApB,EAA2B;AAC9B;AACA;AACA,SAAO,CAACA,KAAK,GAAG,EAAT,EAAae,WAAb,GAA2BC,MAA3B,CAAkC,CAAlC,MAAyC,GAAhD;AACH;AAED,OAAO,IAAIC,0BAA0B,GAAG,eAAjC;AAAA,IACH;AACA;AACA;AACA;AACAC,UAAU,GAAGhD,UAAU,CAAC,OAAD,EAAU,IAAV,CALpB;AAOP,OAAO,SAASiD,cAAT,CAAwBhC,KAAxB,EAA+BG,OAA/B,EAAwC8B,OAAxC,EAAiD;AACpD,MAAIjC,KAAK,GAAG,EAAZ,EAAgB;AACZ,WAAOiC,OAAO,GAAG,IAAH,GAAU,IAAxB;AACH,GAFD,MAEO;AACH,WAAOA,OAAO,GAAG,IAAH,GAAU,IAAxB;AACH;AACJ","sourcesContent":["import { makeGetSet } from '../moment/get-set';\nimport { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport {\n    addRegexToken,\n    match1to2,\n    match2,\n    match3to4,\n    match5to6,\n} from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { HOUR, MINUTE, SECOND } from './constants';\nimport toInt from '../utils/to-int';\nimport zeroFill from '../utils/zero-fill';\nimport getParsingFlags from '../create/parsing-flags';\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return (\n        '' +\n        hFormat.apply(this) +\n        zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2)\n    );\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return (\n        '' +\n        this.hours() +\n        zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2)\n    );\n});\n\nfunction meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(\n            this.hours(),\n            this.minutes(),\n            lowercase\n        );\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a', matchMeridiem);\naddRegexToken('A', matchMeridiem);\naddRegexToken('H', match1to2);\naddRegexToken('h', match1to2);\naddRegexToken('k', match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n        pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n        pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nexport function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n}\n\nexport var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    getSetHour = makeGetSet('Hours', true);\n\nexport function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n"]},"metadata":{},"sourceType":"module"}