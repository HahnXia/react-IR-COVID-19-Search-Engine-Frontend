{"ast":null,"code":"import { normalizeUnits, normalizeObjectUnits } from '../units/aliases';\nimport { getPrioritizedUnits } from '../units/priorities';\nimport { hooks } from '../utils/hooks';\nimport isFunction from '../utils/is-function';\nimport { daysInMonth } from '../units/month';\nimport { isLeapYear } from '../utils/is-leap-year';\nimport toInt from '../utils/to-int';\nexport function makeGetSet(unit, keepTime) {\n  return function (value) {\n    if (value != null) {\n      set(this, unit, value);\n      hooks.updateOffset(this, keepTime);\n      return this;\n    } else {\n      return get(this, unit);\n    }\n  };\n}\nexport function get(mom, unit) {\n  return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\nexport function set(mom, unit, value) {\n  if (mom.isValid() && !isNaN(value)) {\n    if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n      value = toInt(value);\n\n      mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n    } else {\n      mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n  }\n} // MOMENTS\n\nexport function stringGet(units) {\n  units = normalizeUnits(units);\n\n  if (isFunction(this[units])) {\n    return this[units]();\n  }\n\n  return this;\n}\nexport function stringSet(units, value) {\n  if (typeof units === 'object') {\n    units = normalizeObjectUnits(units);\n    var prioritized = getPrioritizedUnits(units),\n        i;\n\n    for (i = 0; i < prioritized.length; i++) {\n      this[prioritized[i].unit](units[prioritized[i].unit]);\n    }\n  } else {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units](value);\n    }\n  }\n\n  return this;\n}","map":{"version":3,"sources":["/Users/hahn/Desktop/React/info-retrieval-frontend/node_modules/moment/src/lib/moment/get-set.js"],"names":["normalizeUnits","normalizeObjectUnits","getPrioritizedUnits","hooks","isFunction","daysInMonth","isLeapYear","toInt","makeGetSet","unit","keepTime","value","set","updateOffset","get","mom","isValid","_d","_isUTC","NaN","isNaN","year","month","date","stringGet","units","stringSet","prioritized","i","length"],"mappings":"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","sourcesContent":["import { normalizeUnits, normalizeObjectUnits } from '../units/aliases';\nimport { getPrioritizedUnits } from '../units/priorities';\nimport { hooks } from '../utils/hooks';\nimport isFunction from '../utils/is-function';\nimport { daysInMonth } from '../units/month';\nimport { isLeapYear } from '../utils/is-leap-year';\nimport toInt from '../utils/to-int';\n\nexport function makeGetSet(unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nexport function get(mom, unit) {\n    return mom.isValid()\n        ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n        : NaN;\n}\n\nexport function set(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n        if (\n            unit === 'FullYear' &&\n            isLeapYear(mom.year()) &&\n            mom.month() === 1 &&\n            mom.date() === 29\n        ) {\n            value = toInt(value);\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                value,\n                mom.month(),\n                daysInMonth(value, mom.month())\n            );\n        } else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nexport function stringGet(units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\nexport function stringSet(units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units),\n            i;\n        for (i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n"]},"metadata":{},"sourceType":"module"}