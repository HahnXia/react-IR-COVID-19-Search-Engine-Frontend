{"version":3,"sources":["assets/img/daniel-olahh.jpg","components/search-box/simple-search-box/simple-search-box.component.jsx","pages/main-page/main-page.component.jsx","components/doc-info/doc-info.component.jsx","components/search-box/advanced-search-box/advanced-search-box.component.jsx","pages/query-page/query-page.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SimpleSearchBox","props","handleChange","event","setState","title","target","value","handleSubmit","preventDefault","history","push","pathname","search","state","className","onSubmit","this","type","onChange","Component","withRouter","MainPage","pageHeader","React","createRef","useEffect","window","innerWidth","updateScroll","windowScrollTop","pageYOffset","current","style","transform","addEventListener","removeEventListener","backgroundImage","require","data-parallax","ref","Container","Button","href","color","outline","Alert","DocInfo","info","authors","textAbstract","AdvancedSearchBox","handlechange","handlesubmit","states","name","author","abstract","QueryPage","handelChange","console","log","axios","get","params","then","response","data","results","location","substring","paramsSerializer","qs","stringify","map","docinfo","key","id","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cdb441ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/daniel-olahh.facbbdb7.jpg\";","import React, {Component} from 'react';\nimport { withRouter} from 'react-router-dom';\n// import './search-box.styles.css';\n\nclass SimpleSearchBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: ''\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this\n            .props\n            .history\n            .push({pathname: '/query', search: '?title:' + this.state.title});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1 >\n                    Here is the SearchBox\n                </h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Title\n                    </label>\n                    <input type=\"text\" value={this.state.title} onChange={this.handleChange}/>\n                    <input type=\"submit\" value=\"Submit\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SimpleSearchBox);","import React, {Component} from 'react';\nimport {Button, Container} from \"reactstrap\";\nimport {Alert} from 'reactstrap';\n\nimport SimpleSearchBox from '../../components/search-box/simple-search-box/simple-search-box.component';\n\nfunction MainPage() {\n    // eslint-disable-next-line no-useless-constructor\n\n    let pageHeader = React.createRef();\n\n    React.useEffect(() => {\n        if (window.innerWidth < 991) {\n            const updateScroll = () => {\n                let windowScrollTop = window.pageYOffset / 3;\n                pageHeader.current.style.transform = \"translate3d(0,\" + windowScrollTop + \"px,0)\";\n            };\n            window.addEventListener(\"scroll\", updateScroll);\n            return function cleanup() {\n                window.removeEventListener(\"scroll\", updateScroll);\n            };\n        }\n    });\n\n    return (\n        <div>\n            <div\n                style={{\n                backgroundImage: \"url(\" + require(\"../../assets/img/daniel-olahh.jpg\") + \")\"\n            }}\n                className=\"page-header\"\n                data-parallax={true}\n                ref={pageHeader}>\n                <div className=\"filter\"/>\n                <Container>\n                    <div className=\"motto text-center\">\n                        <h1>Example page</h1>\n                        <h3>Start designing your landing page here.</h3>\n                        <br/>\n                        <Button\n                            href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n                            className=\"btn-round mr-1\"\n                            color=\"neutral\"\n                            target=\"_blank\"\n                            outline>\n                            <i className=\"fa fa-play\"/>\n                            Watch video\n                        </Button>\n                        <Button className=\"btn-round\" color=\"neutral\" type=\"button\" outline>\n                            Download\n                        </Button>\n                    </div>\n                </Container>\n            </div>\n            <Alert color=\"primary\">\n                This is a primary alert—check it out!\n            </Alert>\n            <Alert color=\"success\">\n                This is a primary alert—check it out!\n            </Alert>\n            <Alert color=\"danger\">\n                This is a primary alert—check it out!\n            </Alert>\n            <Alert color=\"warning\">\n                This is a primary alert—check it out!\n            </Alert>\n            <Alert color=\"info\">\n                This is a primary alert—check it out!\n            </Alert>\n            <Button color=\"danger\">Danger!</Button>\n        </div>\n    )\n\n}\n\nexport default MainPage;","import React from 'react';\n\nconst DocInfo = (props) => (\n    <div>\n        <h3>Titile: {props.info.title}</h3>\n        <h4>Authors: {props.info.authors}</h4>\n        <p>Abstract: {props.info.textAbstract}</p>\n    </div>\n);\n\nexport default DocInfo;\n\n","import React from 'react';\n\nconst AdvancedSearchBox = ({handlechange, handlesubmit, states}) => (\n    <div className=\"App\">\n        <h1 >\n            Here is the SearchBox\n        </h1>\n        <form onSubmit={handlesubmit}>\n            <label>\n                Title\n            </label>\n            <input name='title' type=\"text\" value={states.title} onChange={handlechange}/>\n            <label>\n                Author\n            </label>\n            <input name='author' type=\"text\" value={states.author} onChange={handlechange}/>\n            <label>\n                Abstract\n            </label>\n            <input name='abstract' type=\"text\" value={states.abstract} onChange={handlechange}/>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>\n    </div>\n);\n\nexport default AdvancedSearchBox;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom';\nimport qs from 'qs';\nimport DocInfo from '../../components/doc-info/doc-info.component';\nimport AdvancedSearchBox from '../../components/search-box/advanced-search-box/advanced-search-box.component';\n\nconst SEVER_URL = 'http://localhost:8090';\nconst QUERY_URL = 'query'\n\nclass QueryPage extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            abstract: '',\n            authors: [],\n            results: []\n        }\n    }\n\n    // only called from the mainpage\n    componentDidMount() {\n        console.log(this.props);\n        const title = this.props.location.search.substring(1);\n        console.log(title);\n        axios\n            .get(`${SEVER_URL}/${QUERY_URL}/title`, {\n            params: {\n                title: title\n            },\n            paramsSerializer: params => {\n              return qs.stringify(params)\n            }\n        })\n            .then(response => response.data)\n            .then(response => this.setState({results: response}));\n    }\n\n    handelChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({[name]: value}, () => console.log(name + ':' + value));\n    }\n\n    handleSubmit = (event) => {\n        axios\n            .get(`${SEVER_URL}/${QUERY_URL}`, {\n            params: {\n                title: this.state.title,\n                abstract: this.state.abstract,\n                author: this.state.author,\n            }\n        })\n            .then(response => response.data)\n            .then(response => this.setState({results: response}));\n    }\n\n    render() {\n        return (\n            <div>\n                <AdvancedSearchBox handlechange={this.handelChange} handlesubmit={this.handleSubmit} states={this.state}/>\n\n                <h1>This is the QueryPage</h1>\n\n                {this\n                    .state\n                    .results\n                    .map(docinfo => (<DocInfo key={docinfo.id} info={docinfo}/>))\n}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(QueryPage);","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport MainPage from './pages/main-page/main-page.component';\nimport QueryPage from './pages/query-page/query-page.component';\n\nclass App extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div>\n                <Route exact path='/' component={MainPage} />\n                <Route exact path='/query' component={QueryPage}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}